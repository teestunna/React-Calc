{"version":3,"sources":["App.js","constant/constants.js","index.js"],"names":["App","useState","calculate","setCalculate","special","setSpecial","exponent","setExponent","calcOps","updateCalculation","value","includes","slice","className","label","onClick","wti","price","match","getprice","backspace","digits","i","push","toString","calcDigits","checkResult","replace","Function","e","calculation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d9e30be.chunk.js","sourcesContent":["import { useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {wti} from './constant/constants';\n\nfunction App() {\n\tconst [calculate, setCalculate] = useState(\"\");\n\tconst [special, setSpecial] = useState(\"\");\n\tconst [exponent, setExponent] = useState(\"\");\n\t// const wti = wti;\n\n\tconst calcOps = ['/', '*', '+', '-', '.'];\n\n\tconst updateCalculation = value => {\n\t\t\n\t\tif (\n\t\t\t// eslint-disable-next-line\n\t\t\tcalcOps.includes(value) && calculate === '' ||\n\t\t\t// eslint-disable-next-line\n\t\t\tcalcOps.includes(value) && calcOps.includes(calculate.slice(-1))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value === 'Math.sqrt') {\n\t\t\tsetSpecial(value);\n\t\t} else if (value === 'Math.pow' && calculate) {\n\t\t\tsetSpecial(value);\n\t\t\tsetExponent(calculate);\n\t\t\tsetCalculate(\"\");\n\t\t} else {\n\t\t\tsetCalculate(calculate + value);\n\t\t}\n\t}\n\n\tconst calcDigits = () => {\n\t\tconst digits = [];\n\n\t\tfor(let i = 1; i < 10; i++) {\n\t\t\tdigits.push(\n\t\t\t\t<button\n\t\t\t\t\tlabel={i}\n\t\t\t\t\tdata-testid = {i}\n\t\t\t\t\tonClick= {() => updateCalculation(i.toString())}\n\t\t\t\t\tkey={i}\n\t\t\t\t\t>\n\t\t\t\t\t{i}\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\n\t\treturn digits;\n\t}\n\n    const calculation = () => {\n        var checkResult = ''\n        if(calculate.includes('--')){\n            checkResult = calculate.replace('--','+');\n        } else if (special === 'Math.sqrt' && calculate) {\n\t\t\tcheckResult = special + '(' + calculate + ')';\n\t\t} else if (special === 'Math.pow' && calculate && exponent) {\n\t\t\tcheckResult = special + '(' + exponent + ',' + calculate + ')';\n\t\t}\n        else {\n            checkResult = calculate;\n        }\n\n        try {\n\t\t\t// eslint-disable-next-line\n\t\t\tsetCalculate(((new Function('return ' +checkResult)()) || \"\" ) + \"\")\n\t\t\tsetSpecial(\"\");\n\t\t\tsetExponent(\"\");\n        } catch (e) {\n\t\t\tsetCalculate('Error!')\n        }\n    }\n\n\tconst backspace = () => {\n\t\tif (calculate === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = calculate.slice(0, -1);\n\t\tsetCalculate(value);\n\t}\n\n\tconst getprice = wti => {\n\t\tconst getprice = wti.match(/(\\d+)/);\n\t\tconst price = getprice[0];\n\n\t\tsetCalculate(price);\n\t\treturn price;\n\t}\n\n  \treturn (\n\t\t<div className=\"app-container\">\n\t\t\t<div className=\"calculator\">\n\t\t\t\t<div className=\"display\">\n\t\t\t\t\t{ calculate || '0' }\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className=\"operators\">\n\t\t\t\t\t<button className=\"wti\" label=\"WTI\" data-testid=\"wti-op-button\" data-tip='Get Price' onClick={() => getprice(wti)}>WTI</button>\n\t\t\t\t\t<button data-testid=\"lb-op-button\" data-tip='Left bracket' onClick= {() => updateCalculation('(') }>(</button>\n\t\t\t\t\t<button data-testid=\"rb-op-button\" data-tip='Right bracket' onClick= {() => updateCalculation(')') }>)</button>\n\t\t\t\t\t<button className=\"divide\" data-testid=\"divide-op-button\" data-tip='Divide' onClick= {() => updateCalculation('/')}>&divide;</button>\n\t\t\t\t\t<button className=\"mult\" data-testid=\"mult-op-button\" data-tip='Multiply' onClick= {() => updateCalculation('*')}>&#215;</button>\n\t\t\t\t\t<button className=\"add\" data-testid=\"add-op-button\" data-tip='Addition' onClick= {() => updateCalculation('+')}>&#43;</button>\n\t\t\t\t\t<button className=\"sub\" data-testid=\"sub-op-button\" data-tip='Subtract' onClick= {() => updateCalculation('-')}>&#8722;</button>\n\t\t\t\t\t<button className=\"sqrt\" data-testid=\"sqrt-op-button\" data-tip='Square Root' onClick= {() => updateCalculation('Math.sqrt')}>&#8730;</button>\n\t\t\t\t\t<button className=\"exp\" data-testid=\"exp-op-button\" data-tip='Exponent' onClick= {() => updateCalculation('Math.pow')}>&#8319;</button>\n\t\t\t\t\t<button className=\"c\" label=\"C\" data-testid=\"clear-op-button\" data-tip='Clear' onClick= {() => setCalculate('')}>C</button>\n\t\t\t\t\t<button className=\"del\" label=\"DEL\" data-testid=\"del-op-button\" data-tip='Backspace' onClick= {() => backspace() }>DEL</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"digits\">\n\t\t\t\t\t{ calcDigits() }\n\t\t\t\t\t<button onClick = {() => updateCalculation('0')}>0</button>\n\t\t\t\t\t<button onClick = {() => updateCalculation('.')}>.</button>\n\n\t\t\t\t\t<button className=\"equals\" onClick = {() => calculation()}>=</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ReactTooltip />\n\t\t</div>\n  \t);\n}\n\nexport default App;","export const wti = 'https://oilprice.com/oil-price-charts/45';\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}